{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/MainNav/MainNav.tsx","api.ts","components/PersonItem/PersonItem.tsx","components/Loader/Loader.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/HomePage/HomePage.tsx","components/ErrorPage/ErrorPage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","cn","MainNav","role","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonItem","person","name","sex","born","died","personSlug","slug","fatherName","motherName","mother","father","useParams","Loader","PeopleTable","people","length","map","PeoplePage","useState","peopleList","getPeopleList","isError","setIsError","fetchPeopleList","useCallback","peopleFromServer","preparedPeopleList","find","useEffect","HomePage","ErrorPage","App","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b22a24b8.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n  >\n    {text}\n  </NavLink>\n);\n","import { FC } from 'react';\nimport { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const MainNav: FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonItem: FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    slug: personSlug,\n    fatherName,\n    motherName,\n    mother,\n    father,\n  } = person;\n\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': personSlug === slug,\n      })}\n    >\n      <td>\n        <Link\n          to={`../${personSlug}`}\n          className={cn({ 'has-text-danger': sex === 'f' })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {mother ? (\n          <Link to={`../${mother.slug}`} className=\"has-text-danger\">\n            {motherName}\n          </Link>\n        ) : (\n          <>\n            {motherName || '-'}\n          </>\n        )}\n      </td>\n\n      <td>\n        {father ? (\n          <Link to={`../${father.slug}`}>{fatherName}</Link>\n        ) : (\n          <>\n            {fatherName || '-'}\n          </>\n        )}\n      </td>\n    </tr>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Person } from '../../types';\nimport { PersonItem } from '../PersonItem/PersonItem';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  people: Person[] | null;\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  return (\n    <>\n      {people ? (\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {people.length > 0\n              ? people.map(person => (\n                <PersonItem person={person} key={person.slug} />\n              )) : (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n          </tbody>\n        </table>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n","import {\n  FC,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: FC = () => {\n  const [peopleList, getPeopleList] = useState<Person[] | null>(null);\n  const [isError, setIsError] = useState(false);\n\n  const fetchPeopleList = useCallback(async () => {\n    setIsError(false);\n\n    try {\n      const peopleFromServer = await getPeople();\n\n      const preparedPeopleList = peopleFromServer.map(person => {\n        const { motherName, fatherName } = person;\n        const mother = peopleFromServer.find(({ name }) => name === motherName);\n        const father = peopleFromServer.find(({ name }) => name === fatherName);\n\n        return { ...person, mother, father };\n      });\n\n      getPeopleList(preparedPeopleList);\n    } catch {\n      setIsError(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchPeopleList();\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"box table-container\">\n        {isError ? (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        ) : (\n          <PeopleTable people={peopleList} />\n        )}\n      </div>\n    </div>\n  );\n};\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { FC } from 'react';\n\nexport const ErrorPage: FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { MainNav } from './components/MainNav/MainNav';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { ErrorPage } from './components/ErrorPage/ErrorPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <MainNav />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<ErrorPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}